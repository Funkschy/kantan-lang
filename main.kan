import "lexer"
import "parser"
import "io"
import "map"
import "vec"
import "ast"
import "std"

def main(): void {
    let p = parser.create("420 - (69 / 1)");
    let cu = parser.parse(&p);

    let s = ast.cu_get(&cu, 0);
    io.printf("is expr: %d\n", ast.is_expr(s));

    let e = ast.as_expr_stmt(s).expr;
    if e != null {
        io.printf("%is bin d\n", ast.is_binary(e));

        let test = ast.is_binary(ast.as_binary(e).right);
        io.printf("right is bin %d\n", test);

        let s = ast.expr_to_string(e);
        io.printf("%s\n", s);
        delete s;
    }

    ast.cu_free(&cu);
}

def print_tok(t: *lexer.Token): void {
    io.printf("%s: '%.*s'\n", lexer.token_to_string(t), t.len, t.lexeme);
}
