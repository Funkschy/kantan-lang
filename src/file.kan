import "str";
import "path";
import "error";

extern def read_file(path: string, dest: *string, len: *usize): error.CompileError;

type File struct {
    path: path.PathBuf
}

def create(path: path.PathBuf): File {
    return File { path: path };
}

def (f: *File) name_dup(): string {
    return path.to_string(&f.path.inner);
}

def (s: *File) read_to_string(dest: *str.String): error.CompileError {
    let path = path.to_string(&s.path.inner);
    defer delete path;

    let content = "";
    let len: usize = 0;
    let ret_code = read_file(path, &content, &len);

    *dest = str.move_l(content, len);

    return ret_code;
}

def (f: *File) free() {
    path.free_pb(&f.path);
}
