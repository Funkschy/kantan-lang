import "io";

def isqrt(n: i64): i64 {
    let res: i64 = 0;
    let bit: i64 = 4611686018427387904; // 1 << 62

    while bit > n {
        bit = bit / 4;
    }

    while bit != 0 {
        let rb = res + bit;

        if n >= rb {
            n = n - rb;
            res = (res / 2) + bit;
        } else {
            res = res / 2;
        }

        bit = bit / 4;
    }

    return res;
}

def is_prime(n: i64): bool {
    if n < 2 {
        return false;
    }

    if n < 4 {
        return false;
    }

    if n % 2 == 0 {
        return false;
    }

    let end = isqrt(n);
    for let i: i64 = 3; i <= end; i = i + 2 {
        if n % i == 0 {
            return false;
        }
    }

    return true;
}

def main() {
    let n: i64 = 600851475143;
    let start = isqrt(n);

    for let i: i64 = start; i > 1; i = i - 1 {
        if n % i == 0 && is_prime(i) {
            io.printf("%d\n", i);
            return;
        }
    }
}
